# Generated with graphql-orm

schema:
  - schema.graphql
exec:
  filename: generated.go
  package: gen
model:
  filename: models_gen.go
  package: gen
resolver:
  filename: resolver.go
  type: Resolver
  package: gen
federation:
  filename: federation.go
  package: gen

models:
  
  Delivery:
    model: github.com/loopcontext/deliver-api-go/gen.Delivery
    fields:
      sender:
        resolver: true
      receiver:
        resolver: true
      deliver:
        resolver: true
  DeliveryResultType:
    model: github.com/loopcontext/deliver-api-go/gen.DeliveryResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  DeliveryCreateInput:
    model: "map[string]interface{}"
  DeliveryUpdateInput:
    model: "map[string]interface{}"
  
  Person:
    model: github.com/loopcontext/deliver-api-go/gen.Person
    fields:
      deliveries:
        resolver: true
      deliveriesSent:
        resolver: true
      deliveriesReceived:
        resolver: true
      paymentStatus:
        resolver: true
      paymentHistory:
        resolver: true
  PersonResultType:
    model: github.com/loopcontext/deliver-api-go/gen.PersonResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  PersonCreateInput:
    model: "map[string]interface{}"
  PersonUpdateInput:
    model: "map[string]interface{}"
  
  DeliveryType:
    model: github.com/loopcontext/deliver-api-go/gen.DeliveryType
    fields:
  DeliveryTypeResultType:
    model: github.com/loopcontext/deliver-api-go/gen.DeliveryTypeResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  DeliveryTypeCreateInput:
    model: "map[string]interface{}"
  DeliveryTypeUpdateInput:
    model: "map[string]interface{}"
  
  DeliveryChannel:
    model: github.com/loopcontext/deliver-api-go/gen.DeliveryChannel
    fields:
  DeliveryChannelResultType:
    model: github.com/loopcontext/deliver-api-go/gen.DeliveryChannelResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  DeliveryChannelCreateInput:
    model: "map[string]interface{}"
  DeliveryChannelUpdateInput:
    model: "map[string]interface{}"
  
  VehicleType:
    model: github.com/loopcontext/deliver-api-go/gen.VehicleType
    fields:
  VehicleTypeResultType:
    model: github.com/loopcontext/deliver-api-go/gen.VehicleTypeResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  VehicleTypeCreateInput:
    model: "map[string]interface{}"
  VehicleTypeUpdateInput:
    model: "map[string]interface{}"
  
  PaymentChannel:
    model: github.com/loopcontext/deliver-api-go/gen.PaymentChannel
    fields:
  PaymentChannelResultType:
    model: github.com/loopcontext/deliver-api-go/gen.PaymentChannelResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  PaymentChannelCreateInput:
    model: "map[string]interface{}"
  PaymentChannelUpdateInput:
    model: "map[string]interface{}"
  
  PaymentStatus:
    model: github.com/loopcontext/deliver-api-go/gen.PaymentStatus
    fields:
      person:
        resolver: true
  PaymentStatusResultType:
    model: github.com/loopcontext/deliver-api-go/gen.PaymentStatusResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  PaymentStatusCreateInput:
    model: "map[string]interface{}"
  PaymentStatusUpdateInput:
    model: "map[string]interface{}"
  
  PaymentHistory:
    model: github.com/loopcontext/deliver-api-go/gen.PaymentHistory
    fields:
      person:
        resolver: true
  PaymentHistoryResultType:
    model: github.com/loopcontext/deliver-api-go/gen.PaymentHistoryResultType
    fields:
      count:
        resolver: true
      items:
        resolver: true
  PaymentHistoryCreateInput:
    model: "map[string]interface{}"
  PaymentHistoryUpdateInput:
    model: "map[string]interface{}"
  

  
  